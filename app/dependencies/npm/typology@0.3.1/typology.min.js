/* */ 
"format cjs";
/**
 * typology - A data validation library for Node.js and the browser.
 * @version v0.3.1
 * @link https://github.com/jacomyal/typology
 * @license MIT
 */
!function(){"use strict";function e(e){function n(e,t){var a,s,f,u,d,p,h,l,c=!1,g=!1,y=i.get(e);if("string"===i.get(t)){for(a=t.replace(/^[\?\!]/,"").split(/\|/),f=a.length,s=0;f>s;s++)if(r.indexOf(a[s])<0&&!(a[s]in o))throw new Error("Invalid type.");if(t.match(/^\?/)&&(c=!0),t.replace(/^\?/,"").match(/^\!/)&&(g=!0),g&&c)throw new Error("Invalid type.");for(s in a)if(o[a[s]]&&("function"==typeof o[a[s]].type?o[a[s]].type.call(i,e)===!0:!n(e,o[a[s]].type)))return g?(d=new Error,d.message='Expected a "'+t+'" but found a "'+a[s]+'".',d.expected=t,d.type=a[s],d.value=e,d):null;return null===e||void 0===e?g||c?null:(d=new Error,d.message='Expected a "'+t+'" but found a "'+y+'".',d.expected=t,d.type=y,d.value=e,d):(h=~a.indexOf("*"),l=~a.indexOf(y),g&&(h||l)?(d=new Error,d.message='Expected a "'+t+'" but found a "'+(l?y:"*")+'".',d.type=l?y:"*",d.expected=t,d.value=e,d):g||h||l?null:(d=new Error,d.message='Expected a "'+t+'" but found a "'+y+'".',d.expected=t,d.type=y,d.value=e,d))}if("object"===i.get(t)){if("object"!==y)return d=new Error,d.message='Expected an object but found a "'+y+'".',d.expected=t,d.type=y,d.value=e,d;for(u in t)if(p=n(e[u],t[u]))return d=p,d.path=d.path?[u].concat(d.path):[u],d;for(u in e)if(void 0===t[u])return d=new Error,d.message='Unexpected key "'+u+'".',d.type=y,d.value=e,d;return null}if("array"===i.get(t)){if(1!==t.length)throw new Error("Invalid type.");if("array"!==y)return d=new Error,d.message='Expected an array but found a "'+y+'".',d.expected=t,d.type=y,d.value=e,d;for(f=e.length,s=0;f>s;s++)if(p=n(e[s],t[0]))return d=p,d.path=d.path?[s].concat(d.path):[s],d;return null}throw new Error("Invalid type.")}var i=this,o={};if(this.add=function(e,t){var n,i,a,s,f,u;if(1===arguments.length){if("object"!==this.get(e))throw new Error("If types.add is called with one argument, this one has to be an object.");n=e,s=n.id,u=n.type}else{if(2!==arguments.length)throw new Error("types.add has to be called with one or two arguments.");if("string"!=typeof e||!e)throw new Error("If types.add is called with more than one argument, the first one must be the string id.");s=e,u=t}if("string"!==this.get(s)||0===s.length)throw new Error("A type requires an string id.");if(void 0!==o[s]&&"proto"!==o[s])throw new Error('The type "'+s+'" already exists.');if(~r.indexOf(s))throw new Error('"'+s+'" is a reserved type name.');o[s]=1,a=(n||{}).proto||[],a=Array.isArray(a)?a:[a],f={};for(i in a)void 0===o[a[i]]&&(o[a[i]]=1,f[a[i]]=1);if("function"!==this.get(u)&&!this.isValid(u))throw new Error("A type requires a valid definition. This one can be a preexistant type or else a function testing given objects.");if(o[s]=void 0===n?{id:s,type:u}:{},void 0!==n)for(i in n)o[s][i]=n[i];for(i in f)i!==s&&delete o[i];return this},this.has=function(e){return!!o[e]},this.get=function(e){return null===e||void 0===e?String(e):t[Object.prototype.toString.call(e)]||"object"},this.check=function(e,t,r){var i=n(e,t);if(r&&i)throw i;return!i},this.isValid=function(e){var t,n,i;if("string"===this.get(e)){t=e.replace(/^[\?\!]/,"").split(/\|/);for(i in t)if(r.indexOf(t[i])<0&&!(t[i]in o))return!1;return!0}if("object"===this.get(e)){for(n in e)if(!this.isValid(e[n]))return!1;return!0}return"array"===this.get(e)&&1===e.length?this.isValid(e[0]):!1},this.add("type",function(e){return this.isValid(e)}.bind(this)),this.add("primitive",function(e){return!e||!(e instanceof Object||"object"==typeof e)}),e=e||{},"object"!==this.get(e))throw Error("Invalid argument.");for(var a in e)this.add(a,e[a])}var t={},r=["*"];!function(){var e,n,i=["Arguments","Boolean","Number","String","Function","Array","Date","RegExp","Object"];for(e in i)n=i[e],r.push(n.toLowerCase()),t["[object "+n+"]"]=n.toLowerCase()}();var n=e;e.call(n),Object.defineProperty(n,"version",{value:"0.3.1"}),"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=n),exports.types=n):"function"==typeof define&&define.amd?define("typology",[],function(){return n}):this.types=n}(this);